
######################
# This file is autogenerated
# run serviceUtilities.py in service directory to create this file
# serviceUtilities.py -h for list of commands and options
######################
locals { metrics_definitions = {
  provisioning_iops = {
    type               = "gauge"
    description        = <<-EOF
                    Disk's provisioned IOPS specified by the user.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "provisioning"
    google_metric_path = "compute.googleapis.com/disk/provisioning/iops"
    label              = "Provisioned disk IOPS"
    unit               = "1"
    metricBin          = "disk"
    valuetype          = "INT64"

  }
  provisioning_size = {
    type               = "gauge"
    description        = <<-EOF
                    Disk's provisioned size specified by the user.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "provisioning"
    google_metric_path = "compute.googleapis.com/disk/provisioning/size"
    label              = "Provisioned disk size"
    unit               = "By"
    metricBin          = "disk"
    valuetype          = "INT64"

  }
  provisioning_throughput = {
    type               = "gauge"
    description        = <<-EOF
                    Disk's provisioned throughput bytes/sec specified by the user.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "provisioning"
    google_metric_path = "compute.googleapis.com/disk/provisioning/throughput"
    label              = "Provisioned disk throughput bytes/sec"
    unit               = "1"
    metricBin          = "disk"
    valuetype          = "INT64"

  }
  dropped_bytes_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of incoming bytes dropped by the firewall.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/firewall/dropped_bytes_count"
    label              = "Dropped bytes"
    unit               = "By"
    metricBin          = "firewall"
    valuetype          = "INT64"

  }
  dropped_packets_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of incoming packets dropped by the firewall.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/firewall/dropped_packets_count"
    label              = "Dropped packets"
    unit               = "1"
    metricBin          = "firewall"
    valuetype          = "INT64"

  }
  request_count = {
    type               = "delta"
    description        = <<-EOF
                    The number of global internal DNS requests in a GCE project.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/global_dns/request_count"
    label              = "GCE Project Global DNS Request Count"
    unit               = "1"
    metricBin          = "global_dns"
    valuetype          = "INT64"

  }
  cpu_load_15m = {
    type               = "gauge"
    description        = <<-EOF
                    CPU Load 15 minute intervals. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "ALPHA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "cpu"
    google_metric_path = "compute.googleapis.com/guest/cpu/load_15m"
    label              = "CPU load average 15m"
    unit               = "1"
    metricBin          = "guest"
    valuetype          = "DOUBLE"

  }
  cpu_load_1m = {
    type               = "gauge"
    description        = <<-EOF
                    CPU Load 1 minute intervals. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "ALPHA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "cpu"
    google_metric_path = "compute.googleapis.com/guest/cpu/load_1m"
    label              = "CPU load average 1m"
    unit               = "1"
    metricBin          = "guest"
    valuetype          = "DOUBLE"

  }
  cpu_load_5m = {
    type               = "gauge"
    description        = <<-EOF
                    CPU Load 5 minute intervals.  For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "ALPHA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "cpu"
    google_metric_path = "compute.googleapis.com/guest/cpu/load_5m"
    label              = "CPU load average 5m"
    unit               = "1"
    metricBin          = "guest"
    valuetype          = "DOUBLE"

  }
  cpu_runnable_task_count = {
    type               = "gauge"
    description        = <<-EOF
                    The average number of runnable tasks in the run-queue. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "cpu"
    google_metric_path = "compute.googleapis.com/guest/cpu/runnable_task_count"
    label              = "Runnable task count."
    unit               = "1"
    metricBin          = "guest"
    valuetype          = "DOUBLE"

  }
  cpu_usage_time = {
    type               = "cumulativeCounter"
    description        = <<-EOF
                    CPU usage, in seconds. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "cpu"
    google_metric_path = "compute.googleapis.com/guest/cpu/usage_time"
    label              = "CPU usage"
    unit               = "s{CPU}"
    metricBin          = "guest"
    valuetype          = "DOUBLE"

  }
  disk_bytes_used = {
    type               = "gauge"
    description        = <<-EOF
                    Number of bytes used on disk for file systems. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/guest/disk/bytes_used"
    label              = "Disk usage"
    unit               = "By"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  disk_io_time = {
    type               = "cumulativeCounter"
    description        = <<-EOF
                    The cumulative time spent on the I/O operations that are in progress; that is, the actual time in queue and when disks were busy. Requests issued in parallel are counted as a single one. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/guest/disk/io_time"
    label              = "IO Time"
    unit               = "ms"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  disk_merged_operation_count = {
    type               = "cumulativeCounter"
    description        = <<-EOF
                    Merged disk operations count. Disk operations which are adjacent to each other may be merged by the kernel for efficiency. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/guest/disk/merged_operation_count"
    label              = "Merged disk operations"
    unit               = "1"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  disk_operation_bytes_count = {
    type               = "cumulativeCounter"
    description        = <<-EOF
                    Bytes transferred in disk operations. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/guest/disk/operation_bytes_count"
    label              = "Disk bytes transferred"
    unit               = "By"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  disk_operation_count = {
    type               = "cumulativeCounter"
    description        = <<-EOF
                    Disk operations count. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/guest/disk/operation_count"
    label              = "Disk operations"
    unit               = "1"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  disk_operation_time = {
    type               = "cumulativeCounter"
    description        = <<-EOF
                    Amount of time spent on the disk operations, by direction. This metric only includes time spent on completed operations. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/guest/disk/operation_time"
    label              = "Disk operation time"
    unit               = "ms"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  disk_queue_length = {
    type               = "gauge"
    description        = <<-EOF
                    The queue length on the disk averaged over the last 60 seconds. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/guest/disk/queue_length"
    label              = "Queue Length"
    unit               = "1"
    metricBin          = "guest"
    valuetype          = "DOUBLE"

  }
  disk_weighted_io_time = {
    type               = "cumulativeCounter"
    description        = <<-EOF
                    The cumulative weighted IO time spent on the disk. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/guest/disk/weighted_io_time"
    label              = "IO Time"
    unit               = "ms"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  memory_anonymous_used = {
    type               = "gauge"
    description        = <<-EOF
                    Anonymous memory usage, in Bytes. Summing values of all states yields the total anonymous memory used. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "memory"
    google_metric_path = "compute.googleapis.com/guest/memory/anonymous_used"
    label              = "Anonymous memory usage in Bytes"
    unit               = "By"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  memory_bytes_used = {
    type               = "gauge"
    description        = <<-EOF
                    Memory usage by each memory state, in Bytes. Summing values of all states yields the total memory on the machine. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "memory"
    google_metric_path = "compute.googleapis.com/guest/memory/bytes_used"
    label              = "Memory usage in Bytes"
    unit               = "By"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  memory_dirty_used = {
    type               = "gauge"
    description        = <<-EOF
                    Dirty pages usage, in Bytes. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "memory"
    google_metric_path = "compute.googleapis.com/guest/memory/dirty_used"
    label              = "Dirty pages usage in Bytes."
    unit               = "By"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  memory_page_cache_used = {
    type               = "gauge"
    description        = <<-EOF
                    Page cache memory usage, in Bytes. Summing values of all states yields the total anonymous memory used. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "memory"
    google_metric_path = "compute.googleapis.com/guest/memory/page_cache_used"
    label              = "Page cache memory usage in Bytes"
    unit               = "By"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  memory_unevictable_used = {
    type               = "gauge"
    description        = <<-EOF
                    Unevictable memory usage, in Bytes. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "memory"
    google_metric_path = "compute.googleapis.com/guest/memory/unevictable_used"
    label              = "Unevictable memory usage in Bytes"
    unit               = "By"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  system_os_feature_enabled = {
    type               = "gauge"
    description        = <<-EOF
                    OS Features like GPU support, KTD kernel, third party modules as unknown modules. 1 if the feature is enabled and 0, if disabled.  For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "system"
    google_metric_path = "compute.googleapis.com/guest/system/os_feature_enabled"
    label              = "OS Feature"
    unit               = "1"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  system_problem_count = {
    type               = "cumulativeCounter"
    description        = <<-EOF
                    Number of times a machine problem has happened. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "system"
    google_metric_path = "compute.googleapis.com/guest/system/problem_count"
    label              = "Problem Count"
    unit               = "1"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  system_problem_state = {
    type               = "gauge"
    description        = <<-EOF
                    Whether a problem is affecting the system or not. The problem is affecting the system when set to 1 and is not affecting the system when set to 0. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "system"
    google_metric_path = "compute.googleapis.com/guest/system/problem_state"
    label              = "Problem State"
    unit               = "1"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  system_uptime = {
    type               = "gauge"
    description        = <<-EOF
                    Number of seconds that the operating system has been running for. For Container-Optimized OS, or Ubuntu running GKE.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "system"
    google_metric_path = "compute.googleapis.com/guest/system/uptime"
    label              = "Uptime"
    unit               = "s"
    metricBin          = "guest"
    valuetype          = "INT64"

  }
  cpu_guest_visible_vcpus = {
    type               = "gauge"
    description        = <<-EOF
                    Number of vCPUs visible inside the guest. For many GCE machine types, the number of vCPUs visible inside the guest is equal to the `compute.googleapis.com/instance/cpu/reserved_cores` metric. For shared-core machine types, the number of guest-visible vCPUs differs from the number of resereved cores. For example, e2-small instances have two vCPUs visible inside the guest and 0.5 fractional vCPUs reserved. Therefore, for an e2-small instance,  `compute.googleapis.com/instance/cpu/guest_visible_vcpus` has a value of 2 and `compute.googleapis.com/instance/cpu/reserved_cores` has a value of 0.5.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "cpu"
    google_metric_path = "compute.googleapis.com/instance/cpu/guest_visible_vcpus"
    label              = "Guest Visible vCPUs"
    unit               = "1"
    metricBin          = "instance"
    valuetype          = "DOUBLE"

  }
  cpu_reserved_cores = {
    type               = "gauge"
    description        = <<-EOF
                    Number of vCPUs reserved on the host of the instance.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "cpu"
    google_metric_path = "compute.googleapis.com/instance/cpu/reserved_cores"
    label              = "Reserved vCPUs"
    unit               = "1"
    metricBin          = "instance"
    valuetype          = "DOUBLE"

  }
  cpu_scheduler_wait_time = {
    type               = "delta"
    description        = <<-EOF
                    Wait time is the time a vCPU is ready to run, but unexpectedly not scheduled to run. The wait time returned here is the accumulated value for all vCPUs. The time interval for which the value was measured is returned by Monitoring in whole seconds as start_time and end_time. This metric is only available for VMs that belong to the e2 family or to overcommitted VMs on sole-tenant nodes.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "cpu"
    google_metric_path = "compute.googleapis.com/instance/cpu/scheduler_wait_time"
    label              = "Scheduler Wait Time"
    unit               = "s{idle}"
    metricBin          = "instance"
    valuetype          = "DOUBLE"

  }
  cpu_usage_time = {
    type               = "delta"
    description        = <<-EOF
                    Delta vCPU usage for all vCPUs, in vCPU-seconds. To compute the per-vCPU utilization fraction, divide this value by end-start*N, where end and start define this value's time interval and N is `compute.googleapis.com/instance/cpu/reserved_cores` at the end of the interval. This value is reported by the hypervisor for the VM and can differ from `agent.googleapis.com/cpu/usage_time`, which is reported from inside the VM.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "cpu"
    google_metric_path = "compute.googleapis.com/instance/cpu/usage_time"
    label              = "CPU usage"
    unit               = "s{CPU}"
    metricBin          = "instance"
    valuetype          = "DOUBLE"

  }
  cpu_utilization = {
    type               = "gauge"
    description        = <<-EOF
                    Fractional utilization of allocated CPU on this instance. Values are typically numbers between 0.0 and 1.0 but some machine types allow bursting above 1.0. Charts display the values as a percentage between 0% and 100% or more. This metric is reported by the hypervisor for the VM and can differ from `agent.googleapis.com/cpu/utilization`, which is reported from inside the VM.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "cpu"
    google_metric_path = "compute.googleapis.com/instance/cpu/utilization"
    label              = "CPU utilization"
    unit               = "10^2.%"
    metricBin          = "instance"
    valuetype          = "DOUBLE"

  }
  disk_max_read_bytes_count = {
    type               = "gauge"
    description        = <<-EOF
                    Disk's maximum per-second read throughput over a period of time specified by the user. The period must be one minute or longer.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/instance/disk/max_read_bytes_count"
    label              = "Peak disk read bytes"
    unit               = "By"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  disk_max_read_ops_count = {
    type               = "gauge"
    description        = <<-EOF
                    Disk's maximum per-second read requests count over a period of time specified by the user. The period must be one minute or longer.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/instance/disk/max_read_ops_count"
    label              = "Peak disk read ops"
    unit               = "1"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  disk_max_write_bytes_count = {
    type               = "gauge"
    description        = <<-EOF
                    Disk's maximum per-second write throughput over a period of time specified by the user. The period must be one minute or longer.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/instance/disk/max_write_bytes_count"
    label              = "Peak disk write bytes"
    unit               = "By"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  disk_max_write_ops_count = {
    type               = "gauge"
    description        = <<-EOF
                    Disk's maximum per-second write requests count over a period of time specified by the user. The period must be one minute or longer.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/instance/disk/max_write_ops_count"
    label              = "Peak disk write ops"
    unit               = "1"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  disk_read_bytes_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of bytes read from disk.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/instance/disk/read_bytes_count"
    label              = "Disk read bytes"
    unit               = "By"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  disk_read_ops_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of disk read IO operations.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/instance/disk/read_ops_count"
    label              = "Disk read operations"
    unit               = "1"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  disk_throttled_read_bytes_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of bytes in throttled read operations.
                EOF
    launchStage        = "BAD_VAL-5"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/instance/disk/throttled_read_bytes_count"
    label              = "Throttled read bytes"
    unit               = "By"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  disk_throttled_read_ops_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of throttled read operations.
                EOF
    launchStage        = "BAD_VAL-5"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/instance/disk/throttled_read_ops_count"
    label              = "Throttled read operations"
    unit               = "1"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  disk_throttled_write_bytes_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of bytes in throttled write operations.
                EOF
    launchStage        = "BAD_VAL-5"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/instance/disk/throttled_write_bytes_count"
    label              = "Throttled write bytes"
    unit               = "By"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  disk_throttled_write_ops_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of throttled write operations.
                EOF
    launchStage        = "BAD_VAL-5"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/instance/disk/throttled_write_ops_count"
    label              = "Throttled write operations"
    unit               = "1"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  disk_write_bytes_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of bytes written to disk.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/instance/disk/write_bytes_count"
    label              = "Disk write bytes"
    unit               = "By"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  disk_write_ops_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of disk write IO operations.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "disk"
    google_metric_path = "compute.googleapis.com/instance/disk/write_ops_count"
    label              = "Disk write operations"
    unit               = "1"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  integrity_early_boot_validation_status = {
    type               = "gauge"
    description        = <<-EOF
                    The validation status of early boot integrity policy.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "integrity"
    google_metric_path = "compute.googleapis.com/instance/integrity/early_boot_validation_status"
    label              = "Early Boot Validation"
    unit               = "1"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  integrity_late_boot_validation_status = {
    type               = "gauge"
    description        = <<-EOF
                    The validation status of late boot integrity policy.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "integrity"
    google_metric_path = "compute.googleapis.com/instance/integrity/late_boot_validation_status"
    label              = "Late Boot Validation"
    unit               = "1"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  ram_size = {
    type               = "gauge"
    description        = <<-EOF
                    The total amount of memory in the VM. This metric is only available for VMs that belong to the e2 family.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/instance/memory/balloon/ram_size"
    label              = "VM Memory Total"
    unit               = "By"
    metricBin          = "none"
    valuetype          = "INT64"

  }
  ram_used = {
    type               = "gauge"
    description        = <<-EOF
                    Memory currently used in the VM. This metric is only available for VMs that belong to the e2 family.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/instance/memory/balloon/ram_used"
    label              = "VM Memory Used"
    unit               = "By"
    metricBin          = "none"
    valuetype          = "INT64"

  }
  swap_in_bytes_count = {
    type               = "delta"
    description        = <<-EOF
                    The amount of memory read into the guest from its own swap space. This metric is only available for VMs that belong to the e2 family.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/instance/memory/balloon/swap_in_bytes_count"
    label              = "VM Swap In"
    unit               = "By"
    metricBin          = "none"
    valuetype          = "INT64"

  }
  swap_out_bytes_count = {
    type               = "delta"
    description        = <<-EOF
                    The amount of memory written from the guest to its own swap space. This metric is only available for VMs that belong to the e2 family.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/instance/memory/balloon/swap_out_bytes_count"
    label              = "VM Swap Out"
    unit               = "By"
    metricBin          = "none"
    valuetype          = "INT64"

  }
  network_received_bytes_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of bytes received from the network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "network"
    google_metric_path = "compute.googleapis.com/instance/network/received_bytes_count"
    label              = "Received bytes"
    unit               = "By"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  network_received_packets_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of packets received from the network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "network"
    google_metric_path = "compute.googleapis.com/instance/network/received_packets_count"
    label              = "Received packets"
    unit               = "1"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  network_sent_bytes_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of bytes sent over the network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "network"
    google_metric_path = "compute.googleapis.com/instance/network/sent_bytes_count"
    label              = "Sent bytes"
    unit               = "By"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  network_sent_packets_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of packets sent over the network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "network"
    google_metric_path = "compute.googleapis.com/instance/network/sent_packets_count"
    label              = "Sent packets"
    unit               = "1"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  uptime = {
    type               = "delta"
    description        = <<-EOF
                    Delta of how long the VM has been running, in seconds. Note: to get the total number of seconds since VM start, use compute.googleapis.com/instance/uptime_total.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/instance/uptime"
    label              = "Uptime"
    unit               = "s{uptime}"
    metricBin          = "instance"
    valuetype          = "DOUBLE"

  }
  uptime_total = {
    type               = "gauge"
    description        = <<-EOF
                    Elapsed time since the VM was started, in seconds.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/instance/uptime_total"
    label              = "Uptime Total"
    unit               = "s"
    metricBin          = "instance"
    valuetype          = "INT64"

  }
  predicted_capacity = {
    type               = "gauge"
    description        = <<-EOF
                    Estimated capacity that the instance group will have if predictive autoscaling is enabled. Currently available only for autoscaled instance groups and equal to the predicted number of serving VMs multiplied by utilization target.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/instance_group/predicted_capacity"
    label              = "Instance group capacity as predicted"
    unit               = "1"
    metricBin          = "instance_group"
    valuetype          = "DOUBLE"

  }
  predicted_size = {
    type               = "gauge"
    description        = <<-EOF
                    Estimated number of VMs that the instance group will have if predictive autoscaling is enabled. Currently available only for autoscaled instance groups.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/instance_group/predicted_size"
    label              = "Instance group size as predicted"
    unit               = "1"
    metricBin          = "instance_group"
    valuetype          = "INT64"

  }
  predicted_utilization = {
    type               = "gauge"
    description        = <<-EOF
                    The sum of the estimated values of the scaling metric for all serving VMs if predictive autoscaling is enabled. Currently available only for autoscaled instance groups.
                EOF
    launchStage        = "BETA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/instance_group/predicted_utilization"
    label              = "Instance group utilization as predicted"
    unit               = "1"
    metricBin          = "instance_group"
    valuetype          = "DOUBLE"

  }
  size = {
    type               = "gauge"
    description        = <<-EOF
                    The number of VMs in the instance group.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/instance_group/size"
    label              = "Instance group size"
    unit               = "1"
    metricBin          = "instance_group"
    valuetype          = "INT64"

  }
  dropped_packets_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of dropped mirrored packets.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/mirroring/dropped_packets_count"
    label              = "Dropped packets"
    unit               = "1"
    metricBin          = "mirroring"
    valuetype          = "INT64"

  }
  mirrored_bytes_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of mirrored bytes.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/mirroring/mirrored_bytes_count"
    label              = "Mirrored bytes"
    unit               = "By"
    metricBin          = "mirroring"
    valuetype          = "INT64"

  }
  mirrored_packets_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of mirrored packets.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/mirroring/mirrored_packets_count"
    label              = "Mirrored packets"
    unit               = "1"
    metricBin          = "mirroring"
    valuetype          = "INT64"

  }
  allocated_ports = {
    type               = "gauge"
    description        = <<-EOF
                    Number of ports allocated to a VM by the NAT gateway.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/nat/allocated_ports"
    label              = "Allocated ports"
    unit               = "{port}"
    metricBin          = "nat"
    valuetype          = "INT64"

  }
  closed_connections_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of connections closed over the NAT gateway.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/nat/closed_connections_count"
    label              = "Closed connections count"
    unit               = "{connection}"
    metricBin          = "nat"
    valuetype          = "INT64"

  }
  dropped_received_packets_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of received packets dropped by the NAT gateway.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/nat/dropped_received_packets_count"
    label              = "Received packets dropped count"
    unit               = "{packet}"
    metricBin          = "nat"
    valuetype          = "INT64"

  }
  dropped_sent_packets_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of sent packets dropped by the NAT gateway.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/nat/dropped_sent_packets_count"
    label              = "Sent packets dropped count"
    unit               = "{packet}"
    metricBin          = "nat"
    valuetype          = "INT64"

  }
  new_connections_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of new connections created over the NAT gateway.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/nat/new_connections_count"
    label              = "New connections count"
    unit               = "{connection}"
    metricBin          = "nat"
    valuetype          = "INT64"

  }
  open_connections = {
    type               = "gauge"
    description        = <<-EOF
                    Number of connections currently open on the NAT gateway.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/nat/open_connections"
    label              = "Open connections"
    unit               = "{connection}"
    metricBin          = "nat"
    valuetype          = "INT64"

  }
  port_usage = {
    type               = "gauge"
    description        = <<-EOF
                    Maximum number of connections from a VM to a single internet endpoint IP:port.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/nat/port_usage"
    label              = "Port usage"
    unit               = "{port}"
    metricBin          = "nat"
    valuetype          = "INT64"

  }
  received_bytes_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of bytes received Internet -greater than VM via the NAT gateway.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/nat/received_bytes_count"
    label              = "Received bytes count"
    unit               = "By"
    metricBin          = "nat"
    valuetype          = "INT64"

  }
  received_packets_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of packets received Internet -greater than VM via the NAT gateway.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/nat/received_packets_count"
    label              = "Received packets count"
    unit               = "{packet}"
    metricBin          = "nat"
    valuetype          = "INT64"

  }
  sent_bytes_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of bytes sent VM -greater than Internet over the NAT gateway.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/nat/sent_bytes_count"
    label              = "Sent bytes count"
    unit               = "By"
    metricBin          = "nat"
    valuetype          = "INT64"

  }
  sent_packets_count = {
    type               = "delta"
    description        = <<-EOF
                    Count of packets sent VM -greater than Internet over the NAT gateway.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "none"
    google_metric_path = "compute.googleapis.com/nat/sent_packets_count"
    label              = "Sent packets count"
    unit               = "{packet}"
    metricBin          = "nat"
    valuetype          = "INT64"

  }
  producer_connected_consumer_forwarding_rules = {
    type               = "gauge"
    description        = <<-EOF
                    Number of Consumer Forwarding Rules connected to a PSC Attachment ID.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "producer"
    google_metric_path = "compute.googleapis.com/private_service_connect/producer/connected_consumer_forwarding_rules"
    label              = "Connected consumer forwarding rules"
    unit               = "1"
    metricBin          = "private_service_connect"
    valuetype          = "INT64"

  }
  producer_used_nat_ip_addresses = {
    type               = "gauge"
    description        = <<-EOF
                    IP usage of the monitored service attachment.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "producer"
    google_metric_path = "compute.googleapis.com/private_service_connect/producer/used_nat_ip_addresses"
    label              = "Used nat ip addresses"
    unit               = "1"
    metricBin          = "private_service_connect"
    valuetype          = "INT64"

  }
  instances_per_vpc_network_exceeded = {
    type               = "delta"
    description        = <<-EOF
                    Number of attempts to exceed the limit on quota metric compute.googleapis.com/instances_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "instances_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/instances_per_vpc_network/exceeded"
    label              = "Instances Per VPC Network quota exceeded error"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  instances_per_vpc_network_limit = {
    type               = "gauge"
    description        = <<-EOF
                    Current limit on quota metric compute.googleapis.com/instances_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "instances_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/instances_per_vpc_network/limit"
    label              = "Instances Per VPC Network quota limit"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  instances_per_vpc_network_usage = {
    type               = "gauge"
    description        = <<-EOF
                    Current usage on quota metric compute.googleapis.com/instances_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "instances_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/instances_per_vpc_network/usage"
    label              = "Instances Per VPC Network quota usage"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  internal_lb_forwarding_rules_per_vpc_network_exceeded = {
    type               = "delta"
    description        = <<-EOF
                    Number of attempts to exceed the limit on quota metric compute.googleapis.com/internal_lb_forwarding_rules_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "internal_lb_forwarding_rules_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/internal_lb_forwarding_rules_per_vpc_network/exceeded"
    label              = "Internal Load Balancer Forwarding Rules per VPC Network quota exceeded error"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  internal_lb_forwarding_rules_per_vpc_network_limit = {
    type               = "gauge"
    description        = <<-EOF
                    Current limit on quota metric compute.googleapis.com/internal_lb_forwarding_rules_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "internal_lb_forwarding_rules_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/internal_lb_forwarding_rules_per_vpc_network/limit"
    label              = "Internal Load Balancer Forwarding Rules per VPC Network quota limit"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  internal_lb_forwarding_rules_per_vpc_network_usage = {
    type               = "gauge"
    description        = <<-EOF
                    Current usage on quota metric compute.googleapis.com/internal_lb_forwarding_rules_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "internal_lb_forwarding_rules_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/internal_lb_forwarding_rules_per_vpc_network/usage"
    label              = "Internal Load Balancer Forwarding Rules per VPC Network quota usage"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  internal_managed_forwarding_rules_per_vpc_network_exceeded = {
    type               = "delta"
    description        = <<-EOF
                    Number of attempts to exceed the limit on quota metric compute.googleapis.com/internal_managed_forwarding_rules_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "internal_managed_forwarding_rules_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/internal_managed_forwarding_rules_per_vpc_network/exceeded"
    label              = "Internal Managed Forwarding Rules per VPC Network quota exceeded error"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  internal_managed_forwarding_rules_per_vpc_network_limit = {
    type               = "gauge"
    description        = <<-EOF
                    Current limit on quota metric compute.googleapis.com/internal_managed_forwarding_rules_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "internal_managed_forwarding_rules_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/internal_managed_forwarding_rules_per_vpc_network/limit"
    label              = "Internal Managed Forwarding Rules per VPC Network quota limit"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  internal_managed_forwarding_rules_per_vpc_network_usage = {
    type               = "gauge"
    description        = <<-EOF
                    Current usage on quota metric compute.googleapis.com/internal_managed_forwarding_rules_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "internal_managed_forwarding_rules_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/internal_managed_forwarding_rules_per_vpc_network/usage"
    label              = "Internal Managed Forwarding Rules per VPC Network quota usage"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  internal_protocol_forwarding_rules_per_vpc_network_exceeded = {
    type               = "delta"
    description        = <<-EOF
                    Number of attempts to exceed the limit on quota metric compute.googleapis.com/internal_protocol_forwarding_rules_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "internal_protocol_forwarding_rules_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/internal_protocol_forwarding_rules_per_vpc_network/exceeded"
    label              = "Internal Protocol Forwarding Rules per VPC Network quota exceeded error"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  internal_protocol_forwarding_rules_per_vpc_network_limit = {
    type               = "gauge"
    description        = <<-EOF
                    Current limit on quota metric compute.googleapis.com/internal_protocol_forwarding_rules_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "internal_protocol_forwarding_rules_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/internal_protocol_forwarding_rules_per_vpc_network/limit"
    label              = "Internal Protocol Forwarding Rules per VPC Network quota limit"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  internal_protocol_forwarding_rules_per_vpc_network_usage = {
    type               = "gauge"
    description        = <<-EOF
                    Current usage on quota metric compute.googleapis.com/internal_protocol_forwarding_rules_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "internal_protocol_forwarding_rules_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/internal_protocol_forwarding_rules_per_vpc_network/usage"
    label              = "Internal Protocol Forwarding Rules per VPC Network quota usage"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  ip_aliases_per_vpc_network_exceeded = {
    type               = "delta"
    description        = <<-EOF
                    Number of attempts to exceed the limit on quota metric compute.googleapis.com/ip_aliases_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "ip_aliases_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/ip_aliases_per_vpc_network/exceeded"
    label              = "IP Aliases per VPC Network quota exceeded error"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  ip_aliases_per_vpc_network_limit = {
    type               = "gauge"
    description        = <<-EOF
                    Current limit on quota metric compute.googleapis.com/ip_aliases_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "ip_aliases_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/ip_aliases_per_vpc_network/limit"
    label              = "IP Aliases per VPC Network quota limit"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  ip_aliases_per_vpc_network_usage = {
    type               = "gauge"
    description        = <<-EOF
                    Current usage on quota metric compute.googleapis.com/ip_aliases_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "ip_aliases_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/ip_aliases_per_vpc_network/usage"
    label              = "IP Aliases per VPC Network quota usage"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  local_ssd_total_storage_per_vm_family_exceeded = {
    type               = "delta"
    description        = <<-EOF
                    Number of attempts to exceed the limit on quota metric compute.googleapis.com/local_ssd_total_storage_per_vm_family.
                EOF
    launchStage        = "ALPHA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "local_ssd_total_storage_per_vm_family"
    google_metric_path = "compute.googleapis.com/quota/local_ssd_total_storage_per_vm_family/exceeded"
    label              = "Local SSD disk per VM family GB. quota exceeded error"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  local_ssd_total_storage_per_vm_family_limit = {
    type               = "gauge"
    description        = <<-EOF
                    Current limit on quota metric compute.googleapis.com/local_ssd_total_storage_per_vm_family.
                EOF
    launchStage        = "ALPHA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "local_ssd_total_storage_per_vm_family"
    google_metric_path = "compute.googleapis.com/quota/local_ssd_total_storage_per_vm_family/limit"
    label              = "Local SSD disk per VM family GB. quota limit"
    unit               = "GBy"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  local_ssd_total_storage_per_vm_family_usage = {
    type               = "gauge"
    description        = <<-EOF
                    Current usage on quota metric compute.googleapis.com/local_ssd_total_storage_per_vm_family.
                EOF
    launchStage        = "ALPHA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "local_ssd_total_storage_per_vm_family"
    google_metric_path = "compute.googleapis.com/quota/local_ssd_total_storage_per_vm_family/usage"
    label              = "Local SSD disk per VM family GB. quota usage"
    unit               = "GBy"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  psc_google_apis_forwarding_rules_per_vpc_network_exceeded = {
    type               = "delta"
    description        = <<-EOF
                    Number of attempts to exceed the limit on quota metric compute.googleapis.com/psc_google_apis_forwarding_rules_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "psc_google_apis_forwarding_rules_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/psc_google_apis_forwarding_rules_per_vpc_network/exceeded"
    label              = "PSC Google APIs Forwarding Rules per VPC Network quota exceeded error"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  psc_google_apis_forwarding_rules_per_vpc_network_limit = {
    type               = "gauge"
    description        = <<-EOF
                    Current limit on quota metric compute.googleapis.com/psc_google_apis_forwarding_rules_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "psc_google_apis_forwarding_rules_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/psc_google_apis_forwarding_rules_per_vpc_network/limit"
    label              = "PSC Google APIs Forwarding Rules per VPC Network quota limit"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  psc_google_apis_forwarding_rules_per_vpc_network_usage = {
    type               = "gauge"
    description        = <<-EOF
                    Current usage on quota metric compute.googleapis.com/psc_google_apis_forwarding_rules_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "psc_google_apis_forwarding_rules_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/psc_google_apis_forwarding_rules_per_vpc_network/usage"
    label              = "PSC Google APIs Forwarding Rules per VPC Network quota usage"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  psc_ilb_consumer_forwarding_rules_per_producer_vpc_network_exceeded = {
    type               = "delta"
    description        = <<-EOF
                    Number of attempts to exceed the limit on quota metric compute.googleapis.com/psc_ilb_consumer_forwarding_rules_per_producer_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "psc_ilb_consumer_forwarding_rules_per_producer_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/psc_ilb_consumer_forwarding_rules_per_producer_vpc_network/exceeded"
    label              = "PSC ILB Consumer Forwarding Rules per Producer VPC Network quota exceeded error"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  psc_ilb_consumer_forwarding_rules_per_producer_vpc_network_limit = {
    type               = "gauge"
    description        = <<-EOF
                    Current limit on quota metric compute.googleapis.com/psc_ilb_consumer_forwarding_rules_per_producer_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "psc_ilb_consumer_forwarding_rules_per_producer_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/psc_ilb_consumer_forwarding_rules_per_producer_vpc_network/limit"
    label              = "PSC ILB Consumer Forwarding Rules per Producer VPC Network quota limit"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  psc_ilb_consumer_forwarding_rules_per_producer_vpc_network_usage = {
    type               = "gauge"
    description        = <<-EOF
                    Current usage on quota metric compute.googleapis.com/psc_ilb_consumer_forwarding_rules_per_producer_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "psc_ilb_consumer_forwarding_rules_per_producer_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/psc_ilb_consumer_forwarding_rules_per_producer_vpc_network/usage"
    label              = "PSC ILB Consumer Forwarding Rules per Producer VPC Network quota usage"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  subnet_ranges_per_vpc_network_exceeded = {
    type               = "delta"
    description        = <<-EOF
                    Number of attempts to exceed the limit on quota metric compute.googleapis.com/subnet_ranges_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "subnet_ranges_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/subnet_ranges_per_vpc_network/exceeded"
    label              = "Subnetwork ranges per VPC Network quota exceeded error"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  subnet_ranges_per_vpc_network_limit = {
    type               = "gauge"
    description        = <<-EOF
                    Current limit on quota metric compute.googleapis.com/subnet_ranges_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "subnet_ranges_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/subnet_ranges_per_vpc_network/limit"
    label              = "Subnetwork ranges per VPC Network quota limit"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
  subnet_ranges_per_vpc_network_usage = {
    type               = "gauge"
    description        = <<-EOF
                    Current usage on quota metric compute.googleapis.com/subnet_ranges_per_vpc_network.
                EOF
    launchStage        = "GA"
    rollup             = "avg"
    aggregate          = "sum"
    metricCategory     = "subnet_ranges_per_vpc_network"
    google_metric_path = "compute.googleapis.com/quota/subnet_ranges_per_vpc_network/usage"
    label              = "Subnetwork ranges per VPC Network quota usage"
    unit               = "1"
    metricBin          = "quota"
    valuetype          = "INT64"

  }
} }