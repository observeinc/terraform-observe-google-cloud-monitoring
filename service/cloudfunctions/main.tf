locals {
  cloud_functions_instances = resource.observe_dataset.cloud_functions_instances.id
  cloud_functions_metrics   = resource.observe_dataset.cloud_functions_metrics[0].id
  cloud_functions_logs      = resource.observe_dataset.cloud_functions_function_logs.id
  dashboard_name            = format(var.name_format, "Monitoring")

  freshness = merge({}, var.freshness_overrides)
  workspace = var.workspace.oid

  /*

  workspace = local.datasets.REPLACE_WITH_DATASET_NAME.workspace
  name        = local.datasets.REPLACE_WITH_DATASET_NAME.name
  freshness   = local.datasets.REPLACE_WITH_DATASET_NAME.freshness
  description = local.datasets.REPLACE_WITH_DATASET_NAME.description

*/

  datasets = {
    cloud_functions_instances = {
      workspace   = local.workspace
      name        = format(var.name_format, "Instances")
      freshness   = lookup(local.freshness, "cloud_functions_instances", var.freshness_default_duration)
      description = "This dataset is used to create Cloud Function Resources"
    }

    cloud_functions_metrics = {
      workspace   = local.workspace
      name        = format(var.name_format, "Metrics")
      freshness   = lookup(local.freshness, "cloud_functions_metrics", var.freshness_default_duration)
      description = "This dataset contains metrics collected for cloud functions"
    }

    cloud_functions_function_logs = {
      workspace   = local.workspace
      name        = format(var.name_format, "Logs")
      freshness   = lookup(local.freshness, "cloud_functions_function_logs", var.freshness_default_duration)
      description = "This dataset contains function logs generated by Cloud Function operations"
    }

    cloud_functions_audit_logs = {
      workspace   = local.workspace
      name        = format(var.name_format, "Audit Logs")
      freshness   = lookup(local.freshness, "cloud_functions_audit_logs", var.freshness_default_duration)
      description = "This dataset contains audit logs generated by Cloud Function operations"
    }
  }
}